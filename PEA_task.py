import streamlit as st
import pandas as pd
import requests
from collections import Counter
from io import StringIO
import re

# ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏Å‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô (mojibake)
def decode_mojibake(text):
    try:
        return text.encode('latin1').decode('tis-620')
    except:
        return text

# üîÅ ‡πÅ‡∏õ‡∏•‡∏á Google Sheet URL ‚Üí export CSV URL
def convert_to_csv_url(google_sheet_url):
    try:
        match = re.search(r'/d/([a-zA-Z0-9-_]+)', google_sheet_url)
        sheet_id = match.group(1)
        gid_match = re.search(r'gid=([0-9]+)', google_sheet_url)
        gid = gid_match.group(1) if gid_match else '0'
        return f'https://docs.google.com/spreadsheets/d/{sheet_id}/export?format=csv&gid={gid}'
    except Exception:
        return None

# üì• ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç header ‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô
def read_google_sheet(sheet_url):
    csv_url = convert_to_csv_url(sheet_url)
    try:
        response = requests.get(csv_url)
        response.raise_for_status()

        df_raw = pd.read_csv(StringIO(response.text), encoding="utf-8-sig", header=None)

        # üîÅ ‡πÉ‡∏ä‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 1 ‡πÄ‡∏õ‡πá‡∏ô header (index 1) ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ mojibake
        raw_header = df_raw.iloc[1]
        fixed_header = [decode_mojibake(str(col)).strip() for col in raw_header]
        df_raw.columns = fixed_header

        # ‚ùå ‡∏•‡∏ö‡πÅ‡∏ñ‡∏ß 0 ‡πÅ‡∏•‡∏∞ 1 (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤)
        df_clean = df_raw.drop(index=[0, 1]).reset_index(drop=True)

        st.success("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ‡πÉ‡∏ä‡πâ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 2 ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô‡πÅ‡∏•‡πâ‡∏ß")
        st.write("üìå ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:", df_clean.columns.tolist())

        return df_clean

    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {e}")
        return None

# ===============================
# üéØ ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Streamlit ‡∏´‡∏•‡∏±‡∏Å
# ===============================
st.title("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏≥")

sheet_url = st.text_input("üîó ‡∏ß‡∏≤‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå Google Sheet ‡∏ó‡∏µ‡πà‡πÅ‡∏ä‡∏£‡πå‡πÅ‡∏ö‡∏ö Anyone (Viewer)")

if sheet_url:
    df = read_google_sheet(sheet_url)

    if df is not None:
        required_cols = ["‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥"]
        missing = [col for col in required_cols if col not in df.columns]
        if missing:
            st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: {missing}")
        else:
            emp_id = st.text_input("üîç ‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")
            if emp_id:
                df_emp = df[df["‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"].astype(str) == emp_id]
                if df_emp.empty:
                    st.warning("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
                else:
                    work_items = []
                    for item in df_emp["‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥"].dropna():
                        work_items.extend([i.strip() for i in item.split(',')])
                    count = Counter(work_items)

                    st.subheader(f"‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏£‡∏´‡∏±‡∏™ {emp_id} ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {sum(count.values())} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                    st.dataframe(
                        pd.DataFrame(count.items(), columns=["‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏≤‡∏ô", "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á"])
                        .sort_values(by="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á", ascending=False)
                    )
